SiiNunit
{
# For modders: Please do not modify this file if you want to add a new entry. Create in
# this directory a new file "<base_name>.<idofyourmod>.sii" where <base_name> is name of
# base file without the extension (e.g. "city" for "/def/city.sii") and <idofyourmod> is
# some string which is unlikely to conflict with other mod.

tr_semaphore_profile : tr_sem_prof.common_base {

	model[]: ""

	type: 12
	type[0]: traffic_light
	type[1]: traffic_light
	type[2]: traffic_light
	type[3]: traffic_light
	type[4]: traffic_light_virtual
	type[5]: traffic_light_virtual
	type[6]: traffic_light_virtual
	type[7]: traffic_light_virtual
	type[8]: traffic_light
	type[9]: traffic_light
	type[10]: traffic_light
	type[11]: traffic_light

	interval[]: (15.0, 2.0, 21.0, 0.0)

	cycle: 16
	cycle[0]: 0.0
	cycle[1]: 19.0
	cycle[2]: 0.0
	cycle[3]: 19.0
	cycle[4]: 0.0
	cycle[5]: 19.0
	cycle[6]: 0.0
	cycle[7]: 19.0
	cycle[8]: 0.0
	cycle[9]: 27.0
	cycle[10]: 0.0
	cycle[11]: 27.0
	cycle[12]: 0.0
	cycle[13]: 19.0
	cycle[14]: 0.0
	cycle[15]: 19.0
}

tr_semaphore_profile : tr_sem_prof.base_left {

	inherited: tr_sem_prof.common_base

	interval: 13
	interval[0]: (14.0, 4.0, 32.0, 0.0)
	interval[1]: (14.0, 4.0, 32.0, 0.0)
	interval[2]: (14.0, 4.0, 32.0, 0.0)
	interval[3]: (14.0, 4.0, 32.0, 0.0)
	interval[4]: (14.0, 4.0, 32.0, 0.0)
	interval[5]: (14.0, 4.0, 32.0, 0.0)
	interval[6]: (14.0, 4.0, 32.0, 0.0)
	interval[7]: (14.0, 4.0, 32.0, 0.0)
	interval[8]: (14.0, 4.0, 32.0, 0.0)
	interval[9]: (7.0, 3.0, 40.0, 0.0)
	interval[10]: (14.0, 4.0, 32.0, 0.0)
	interval[11]: (7.0, 3.0, 40.0, 0.0)
	interval[12]: (14.0, 4.0, 32.0, 0.0)

	cycle: 18
	cycle[0]: 0.0
	cycle[1]: 20.0
	cycle[2]: 0.0
	cycle[3]: 20.0
	cycle[4]: 0.0
	cycle[5]: 20.0
	cycle[6]: 0.0
	cycle[7]: 20.0
	cycle[8]: 0.0
	cycle[9]: 31.0
	cycle[10]: 0.0
	cycle[11]: 31.0
	cycle[12]: 0.0
	cycle[13]: 20.0
	cycle[14]: 0.0
	cycle[15]: 20.0
	cycle[16]: 0.0
	cycle[17]: 20.0
}

tr_semaphore_profile : tr_sem_prof.base_left2 {

	inherited: tr_sem_prof.common_base

	interval: 13
	interval[0]: (14.0, 4.0, 42.0, 0.0)
	interval[1]: (14.0, 4.0, 42.0, 0.0)
	interval[2]: (14.0, 4.0, 42.0, 0.0)
	interval[3]: (14.0, 4.0, 42.0, 0.0)
	interval[4]: (14.0, 4.0, 42.0, 0.0)
	interval[5]: (14.0, 4.0, 42.0, 0.0)
	interval[6]: (14.0, 4.0, 42.0, 0.0)
	interval[7]: (14.0, 4.0, 42.0, 0.0)
	interval[8]: (7.0, 3.0, 50.0, 0.0)
	interval[9]: (7.0, 3.0, 50.0, 0.0)
	interval[10]: (7.0, 3.0, 50.0, 0.0)
	interval[11]: (7.0, 3.0, 50.0, 0.0)
	interval[12]: (14.0, 4.0, 42.0, 0.0)

	cycle: 16
	cycle[0]: 0.0
	cycle[1]: 30.0
	cycle[2]: 0.0
	cycle[3]: 30.0
	cycle[4]: 0.0
	cycle[5]: 30.0
	cycle[6]: 0.0
	cycle[7]: 30.0
	cycle[8]: 41.0
	cycle[9]: 11.0
	cycle[10]: 41.0
	cycle[11]: 11.0
	cycle[12]: 0.0
	cycle[13]: 30.0
	cycle[14]: 0.0
	cycle[15]: 30.0
}

tr_semaphore_profile : tr_sem_prof.ca_1x1 {

	inherited: tr_sem_prof.common_base

	name: "crossroad 1x1"

	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: ""
}


tr_semaphore_profile : tr_sem_prof.ca_1x2 {

	inherited: tr_sem_prof.common_base

	name: "crossroad 1x2"

	model[]: "single"
	model[]: "double"
	model[]: "single"
	model[]: "double"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.ca_1x2_left {

	inherited: tr_sem_prof.base_left

	name: "crossroad 1x2 protected left"

	model: 16
	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "single"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: ""
	model[9]: "left_turn"
	model[10]: ""
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
	model[16]: "single"
	model[17]: "single"
}

tr_semaphore_profile : tr_sem_prof.ca_1x2_left2 {

	inherited: tr_sem_prof.base_left2

	name: "crossroad 1x2 protected left (2 sides)"

	model: 16
	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "single"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.ca_2x2 {

	inherited: tr_sem_prof.common_base

	name: "crossroad 2x2"

	model[]: "double"
	model[]: "double"
	model[]: "double"
	model[]: "double"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.ca_2x2_ow {

	inherited: tr_sem_prof.common_base

	name: "crossroad 2x2 oneway"

	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.ca_2x2_left {

	inherited: tr_sem_prof.base_left

	name: "crossroad 2x2 protected left"

	model: 16
	model[0]: "double_cut"
	model[1]: "double_cut"
	model[2]: "double_cut"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: "light_cut"
	model[13]: "light_cut"
	model[14]: "light_cut"
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.ca_2x2_left2 {

	inherited: tr_sem_prof.base_left2

	name: "crossroad 2x2 protected left (2 sides)"

	model: 16
	model[0]: "double_cut"
	model[1]: "double_cut"
	model[2]: "double_cut"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: "light_cut"
	model[13]: "light_cut"
	model[14]: "light_cut"
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.ca_2x2_left3 {

	inherited: tr_sem_prof.base_left2

	name: "crossroad 2x2 protected left (2 sides and separated left arrows)"

	model: 16
	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "single"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_column"
	model[9]: "left_turn"
	model[10]: "left_column"
	model[11]: "left_turn"
	model[12]: "light_cut"
	model[13]: "left_turn"
	model[14]: "light_cut"
	model[15]: "left_turn"
}

tr_semaphore_profile : tr_sem_prof.ca_1x2_lefts {

	inherited: tr_sem_prof.base_left

	name: "crossroad 1x2 protected left santa fe"

	model: 16
	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "single_mir"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: ""
	model[9]: "left_column"
	model[10]: ""
	model[11]: "left_column"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.ca_1x2_left3 {

	inherited: tr_sem_prof.base_left

	name: "crossroad 1x2 protected left (separated left arrows)"

	model: 16
	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "single"
	model[3]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: ""
	model[9]: "left_column"
	model[10]: ""
	model[11]: "left_column"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.temporary {

	name: "roadwork traffic light"

	model[]: "temporary"

	type: 2
	type[0]: traffic_light_blockable
	type[1]: traffic_light_blockable

	interval[]: (15.0, 2.0, 33.0, 0.0)

	cycle: 2
	cycle[0]: 0.0
	cycle[1]: 25.0
}

tr_semaphore_profile : tr_sem_prof.ab_toll {

	name: "tollgate"

	model[]: "ab_toll"

	type[]: barrier_manual

	interval[]: (1.0, 1.0, 3.0, 1.0)
	cycle[]: 0.0
}

tr_semaphore_profile : tr_sem_prof.gas {

	name: "gas station - short interval (small vehicles)"

	interval[]: (3.0, 0.0, 3.0, 15.0)

	cycle[]: 0.0
	model[]: ""
	type[]: barrier_gas
}

tr_semaphore_profile : tr_sem_prof.gas_long {

	name: "gas station - long interval (large vehicles)"

	interval[]: (3.0, 1.0, 3.0, 30.0)

	cycle[]: 0.0
	model[]: ""
	type[]: barrier_gas
}

tr_semaphore_profile : tr_sem_prof.weight {

	name: "weight station"

	model[]: ""

	type[]: barrier_manual

	interval[]: (3.0, 0.0, 3.0, 5.0)
	cycle[]: 0.0
}

tr_semaphore_profile : tr_sem_prof.crossing {

	name: "road crossing - country"

	# Distances in [m]:
	#
	# crossing <-> object rear (green)
	# object front <-> crossing (orange-to-red)
	# object front <-> crossing (red)
	# crossing <-> object rear (orange-to-green)
	#
	interval[]: (50.0, 550.0, 350.0, 20.0)

	# Minimum delay after orange-to-green distance before barriers go up
	cycle[]: 4.0

	type[]: barrier_distance
	type[]: model_only

	id_map: 9
	id_map[0]: 0
	id_map[1]: 0
	id_map[2]: 0
	id_map[3]: 0
	id_map[4]: 0
	id_map[5]: 0
	id_map[6]: 0
	id_map[7]: 0
	id_map[8]: 0

	model: 9
	model[0]: ""

	# 1-road x 1-rail
	model[1]: "crossing_r"
	model[2]: "crossing_l"

	# 1-road x 2-rail
	model[3]: "crossing2_r"
	model[4]: "crossing2_l"

	# 1-road x 2-rail
	model[5]: "cr1_r_2ln"
	model[6]: "cr1_l_2ln"

	# 2-road x 2-rail
	model[7]: "cr2_r_2ln"
	model[8]: "cr2_l_2ln"
}

tr_semaphore_profile : tr_sem_prof.crossing_c {

	name: "road crossing - city"

	inherited: tr_sem_prof.crossing

	model[0]: ""

	# 1-road x 1-rail
	model[1]: "crossing_r"
	model[2]: "crossing_l"

	# 1-road x 2-rail
	model[3]: "crossing2_r"
	model[4]: "crossing2_l"

	# 2-road x 1-rail
	model[5]: "cr1_r_2ln_c"
	model[6]: "cr1_l_2ln_c"

	# 2-road x 2-rail
	model[7]: "cr2_r_2ln_c"
	model[8]: "cr2_l_2ln_c"
}

tr_semaphore_profile : tr_sem_prof.crossing_co {
	
	name: "road crossing - city (offset)"

	inherited: tr_sem_prof.crossing_c

	# Use ID offset to allow combining this profile with others
	#
	id_offset: 20
}

tr_semaphore_profile : tr_sem_prof.crossing_o {
	
	name: "road crossing - country (offset)"

	inherited: tr_sem_prof.crossing

	# Use ID offset to allow combining this profile with others
	#
	id_offset: 20
}

tr_semaphore_profile : tr_sem_prof.train {

	name: "train stop"

	interval[]: (3.0, 1.0, 3.0, 120.0)

	cycle[]: 0.0
	model[]: ""
	type[]: barrier_gas
}

#mod_or



tr_semaphore_profile : tr_sem_prof.or_draw_br {

	name: "or_draw_bridge"

	
	interval[0]: (150.0, 165.0, 160.0, 10.0)     # Mover speed: 3.0
	interval[1]: (150.0, 190.0, 175.0, 150.0)    # Mover speed: 3.0

	type[0]: barrier_distance
	type[1]: barrier_distance
	type[]: model_only

	id_map: 7
	id_map[0]: 0
	id_map[1]: 1
	id_map[2]: 0
	id_map[3]: 1
	id_map[4]: 1
	id_map[5]: 1
	id_map[6]: 1


	model: 7

	model[0]: ""
	model[1]: ""
	

	model[2]: "or_draw_br"
 
	model[3]: "or_bridge_lv"
	
	model[4]: "or_bridge_lv"

	model[5]: "single_light"
	
	model[6]: "single_light"

	

}

############## NEW overwrite profiles ##############

tr_semaphore_profile : tr_sem_prof.1x1 {

	inherited: tr_sem_prof.common_base

	name: "us_1x1"

	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: ""

}


tr_semaphore_profile : tr_sem_prof.1x1_park {

	inherited: tr_sem_prof.common_base

	name: "us 1x1 parking"

	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: "single"
	model[]: ""
  
  model_offset[]: (1, 0, 0)
  model_offset[]: (1, 0, 0)
  model_offset[]: (1, 0, 0)
  model_offset[]: (1, 0, 0)
}

tr_semaphore_profile : tr_sem_prof.1x1_center_w {

	inherited: tr_sem_prof.common_base

	name: "us 1x1 center"

	model[]: "single_pnd"
	model[]: "single_pnd"
	model[]: "single_pnd"
	model[]: "single_pnd"
	model[]: ""
  
  model_offset[]: (4, 0, 3)
  model_offset[]: (4, 0, 3)
  model_offset[]: (4, 0, 3)
  model_offset[]: (4, 0, 3)
  
}

tr_semaphore_profile : tr_sem_prof.1x1_nl {

	inherited: tr_sem_prof.common_base

	name: "us 1x1 no lamp"

	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"
	model[]: ""

  
}

tr_semaphore_profile : tr_sem_prof.1t1 {

	inherited: tr_sem_prof.common_base

	name: "us_1t1"

	model[]: "single"
	model[]: "column"
	model[]: "single"
	model[]: "single_nl_o"
	model[]: ""

}

tr_semaphore_profile : tr_sem_prof.1t1_park {

	inherited: tr_sem_prof.common_base

	name: "us 1t1 parking"

	model[]: "single"
	model[]: "column"
	model[]: "single"
	model[]: "single_nl_o"
	model[]: ""
  
  model_offset[]: (0, 0, 0)
  model_offset[]: (0, 0, 0)
  model_offset[]: (1, 0, 0)
  model_offset[]: (0, 0, 0)
}

tr_semaphore_profile : tr_sem_prof.1t1_nl {

	inherited: tr_sem_prof.common_base

	name: "us_1t1_no_lamp"

	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"
	model[]: "single_nl"  
	model[]: ""
  
  model_offset[]: (0, 0, 0)
  model_offset[]: (0, 0, 0)
  model_offset[]: (0, 0, 0)
  model_offset[]: (4, 0, 0)

}

tr_semaphore_profile : tr_sem_prof.2x2 {

	inherited: tr_sem_prof.common_base

	name: "us 2x2"

	model[]: "double_sh"
	model[]: "double_sh"
	model[]: "double_sh"
	model[]: "double_sh"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2x2_nl {

	inherited: tr_sem_prof.common_base

	name: "us 2x2 no lamp"

	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2t2 {

	inherited: tr_sem_prof.common_base

	name: "us 2t2"

	model[]: "double_sh_o"
	model[]: "single_nl_o"
	model[]: "double_sh"
	model[]: "dbl_sh_nl_o"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.111t111 {

	inherited: tr_sem_prof.common_base

	name: "us 111t111"

	model[]: "double_sh_o"
	model[]: "single_nl_o"
	model[]: "single"
	model[]: "dbl_sh_nl_o"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2t2_nl {

	inherited: tr_sem_prof.common_base

	name: "us 2t2 no lamp"

	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: "single_nl"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2x1 {

	inherited: tr_sem_prof.common_base

	name: "us 2x1"

	model[]: "single"
	model[]: "double_sh"
	model[]: "single"
	model[]: "double_sh"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2x1_nl {

	inherited: tr_sem_prof.common_base

	name: "us 2x1 no lamp"

	model[]: "single_nl"
	model[]: "dbl_sh_nl"
	model[]: "single_nl"
	model[]: "dbl_sh_nl"
	model[]: ""
}

tr_semaphore_profile : tr_sem_prof.2t1 {

	inherited: tr_sem_prof.common_base

	name: "us 2t1"

	model[]: "column"
	model[]: "double_sh_o"
	model[]: "single_nl_o"
	model[]: "double_sh"
	model[]: ""
}    

tr_semaphore_profile : tr_sem_prof.2t1_nl {

	inherited: tr_sem_prof.common_base

	name: "us 2t1 no lamp"

	model[]: "single_nl_o"
	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: "dbl_sh_nl"
	model[]: ""
  
  model_offset[]: (4, 0, 0)
  model_offset[]: (0, 0, 0)
  model_offset[]: (0, 0, 0)
  model_offset[]: (0, 0, 0)

}


tr_semaphore_profile : tr_sem_prof.212x111 {

	inherited: tr_sem_prof.base_left

	name: "us 2-1-2 x 1-1-1"

	model[]: "single"
	model[]: "double_cut"
	model[]: "double_sh"
	model[]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}


tr_semaphore_profile : tr_sem_prof.212t111 {

	inherited: tr_sem_prof.base_left

	name: "us 2-1-2 t 1-1-1"

	model[]: "dbl_sh_nl_o"
	model[]: "dbl_cut_o"
	model[]: "single_nl_o"
	model[]: "double_sh"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.212x212 {

	inherited: tr_sem_prof.base_left2

	name: "us 2-1-2 x 2-1-2"

	model[]: "double_cut"
	model[]: "double_cut"
	model[]: "double_cut"
	model[]: "double_cut"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.212t212 {

	inherited: tr_sem_prof.base_left

	name: "us 2-1-2 t 2-1-2"

	model[]: "dbl_sh_nl"
	model[]: "dbl_cut_o"
	model[]: "dbl_sh_nl_o"
	model[]: "double_sh"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"   
	model[14]: ""
	model[15]: "light_cut"
}

tr_semaphore_profile : tr_sem_prof.212xexl {

	inherited: tr_sem_prof.base_left

	name: "us 2-1-2 x exit left"


	model[0]: "single"
	model[1]: "double_cut"
	model[2]: "column"
	model[3]: "double_sh"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}  

tr_semaphore_profile : tr_sem_prof.212texl {

	inherited: tr_sem_prof.base_left

	name: "us 2-1-2 t exit left"


	model[0]: "double_o"
	model[1]: "double_sh"
	model[2]: "left_column"
	model[3]: "double_sh_o"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: "left_turn"
	model[9]: "left_turn"
	model[10]: "left_turn"
	model[11]: "left_turn"
	model[12]: ""
	model[13]: "light_cut"
	model[14]: ""
	model[15]: "light_cut"
}  



tr_semaphore_profile : tr_sem_prof.212_x_ex {

	inherited: tr_sem_prof.base_left2

	name: "crossroad 2-1-2_x_exit"

	model: 10
	model[0]: "single_left"
	model[1]: "single_light"
	model[2]: "left_column"
	model[3]: "column"
	model[4]: ""
	model[5]: ""
	model[6]: ""
	model[7]: ""
	model[8]: ""
	model[9]: "single_left"
}









}
